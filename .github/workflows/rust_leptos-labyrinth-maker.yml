name: Labyrinth maker

on:
  push:
    branches: ["main"]
    paths:
      - ".github/workflows/rust_leptos-labyrinth-maker.yml"
      - "labyrinth-maker/**"

permissions:
  contents: write

defaults:
  run:
    working-directory: ./labyrinth-maker/labyrinth_leptos

jobs:
  build-and-deploy-website:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Install WebAssembly toolchain
        run: rustup target add wasm32-unknown-unknown

      - name: Install Trunk
        run: |
          cargo install --locked trunk
          cargo install wasm-bindgen-cli

      - name: Build app
        run: trunk build --release --public-url /frontend_app_playground/website/labyrinth-maker/

      - name: Deploy website ðŸš€
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: ./labyrinth-maker/labyrinth_leptos/dist # The folder the action should deploy.
          force: false
          target-folder: website/labyrinth-maker/
  build-and-deploy-worker:
    runs-on: ubuntu-latest
    env:
      working-directory: ./labyrinth-maker/labyrinth-maker-worker
      CLOUDFLARE_API_TOKEN: ${{ secrets.CF_UKASZAPPS_WORKER_API_KEY }}
    defaults:
      run:
        working-directory: ${{ env.working-directory }}

    name: Deploy worker generator to Cloudflare Edge

    steps:
      - uses: actions/checkout@v3
      - name: Setup Rust toolchain
        run: |
          curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs > rustup.sh
          sh rustup.sh -y
          source "$HOME/.cargo/env"
          rustup toolchain install stable
          rustup target add wasm32-unknown-unknown
          cargo -V

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: v18.12.1

      - name: Publish to Edge
        run: |
          sudo npm install wrangler --save-dev
          cargo install -q worker-build --version 0.0.9
          worker-build --release
          cp wrangler.toml-ga wrangler.toml
          export CLOUDFLARE_API_TOKEN="${{ secrets.CF_UKASZAPPS_WORKER_API_KEY }}" 
          sudo npx wrangler publish
